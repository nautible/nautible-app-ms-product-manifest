kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: nautible-app-product-mysql-sts
  labels:
    app.kubernetes.io/name: nautible-app-product-mysql
    app.kubernetes.io/instance: nautible-app-product-mysql-1
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: nautible
    app.kubernetes.io/managed-by: manual
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: nautible-app-product-mysql-1
      app.kubernetes.io/component: database
  serviceName: nautible-app-product-mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nautible-app-product-mysql
        app.kubernetes.io/instance: nautible-app-product-mysql-1
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: nautible
        app.kubernetes.io/managed-by: manual
    spec:
      containers:
        - name: nautible-app-product-mysql
          image: ogis/nautible-app-product-mysql:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              protocol: TCP
              containerPort: 3306
          volumeMounts:
            - name: nautible-app-product-mysql-data-pvc
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: DATABASE_PW
  volumeClaimTemplates:
    - metadata:
        name: nautible-app-product-mysql-data-pvc
        labels:
          app.kubernetes.io/name: nautible-app-product-mysql
          app.kubernetes.io/instance: nautible-app-product-mysql-1
          app.kubernetes.io/version: 1.0.0
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: nautible
          app.kubernetes.io/managed-by: manual
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
